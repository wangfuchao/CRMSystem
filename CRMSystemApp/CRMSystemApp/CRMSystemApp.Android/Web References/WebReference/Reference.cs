//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace CRMSystemApp.Droid.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCustomerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectSthClientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectClientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePersonalInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectPersonalInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePriorityStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTheLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTheLogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientInfosOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScanReceiveClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContractInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectContractInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContractInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProjectInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectProjectListInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProjectListInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProjectListInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBusinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBusinessDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectBusinessInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBusinessInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadImgOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadImgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClueInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDateStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonalgoalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIdNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffInfosOperationCompleted;
        
        private System.Threading.SendOrPostCallback TheClientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback TheClientBusinessInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback TheNewsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNewsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteNewsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllClientsStateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback JoinQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpDateIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback AlterTheRootPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback StaffAssClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImagePathOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = "http://172.27.35.1/WebService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event UserLoginCompletedEventHandler UserLoginCompleted;
        
        /// <remarks/>
        public event UserCheckCompletedEventHandler UserCheckCompleted;
        
        /// <remarks/>
        public event InsertCustomerInfoCompletedEventHandler InsertCustomerInfoCompleted;
        
        /// <remarks/>
        public event CheckPhoneCompletedEventHandler CheckPhoneCompleted;
        
        /// <remarks/>
        public event SelectSthClientInfoCompletedEventHandler SelectSthClientInfoCompleted;
        
        /// <remarks/>
        public event SelectClientInfoCompletedEventHandler SelectClientInfoCompleted;
        
        /// <remarks/>
        public event DeletePersonalInfoCompletedEventHandler DeletePersonalInfoCompleted;
        
        /// <remarks/>
        public event SelectPersonalInfoCompletedEventHandler SelectPersonalInfoCompleted;
        
        /// <remarks/>
        public event UpdatePriorityStateCompletedEventHandler UpdatePriorityStateCompleted;
        
        /// <remarks/>
        public event InsertTheLogCompletedEventHandler InsertTheLogCompleted;
        
        /// <remarks/>
        public event GetTheLogsCompletedEventHandler GetTheLogsCompleted;
        
        /// <remarks/>
        public event UpdateClientInfosCompletedEventHandler UpdateClientInfosCompleted;
        
        /// <remarks/>
        public event ScanReceiveClientCompletedEventHandler ScanReceiveClientCompleted;
        
        /// <remarks/>
        public event CheckContractCompletedEventHandler CheckContractCompleted;
        
        /// <remarks/>
        public event InsertContractCompletedEventHandler InsertContractCompleted;
        
        /// <remarks/>
        public event UpdateContractInfoCompletedEventHandler UpdateContractInfoCompleted;
        
        /// <remarks/>
        public event SelectContractInfoCompletedEventHandler SelectContractInfoCompleted;
        
        /// <remarks/>
        public event DeleteContractInfoCompletedEventHandler DeleteContractInfoCompleted;
        
        /// <remarks/>
        public event InsertProjectInfoCompletedEventHandler InsertProjectInfoCompleted;
        
        /// <remarks/>
        public event SelectProjectListInfoCompletedEventHandler SelectProjectListInfoCompleted;
        
        /// <remarks/>
        public event UpdateProjectListInfoCompletedEventHandler UpdateProjectListInfoCompleted;
        
        /// <remarks/>
        public event DeleteProjectListInfoCompletedEventHandler DeleteProjectListInfoCompleted;
        
        /// <remarks/>
        public event CheckBusinessCompletedEventHandler CheckBusinessCompleted;
        
        /// <remarks/>
        public event InsertBusinessDetailCompletedEventHandler InsertBusinessDetailCompleted;
        
        /// <remarks/>
        public event SelectBusinessInfoCompletedEventHandler SelectBusinessInfoCompleted;
        
        /// <remarks/>
        public event DeleteBusinessInfoCompletedEventHandler DeleteBusinessInfoCompleted;
        
        /// <remarks/>
        public event UploadImgCompletedEventHandler UploadImgCompleted;
        
        /// <remarks/>
        public event LoadImgCompletedEventHandler LoadImgCompleted;
        
        /// <remarks/>
        public event GetClueInfoCompletedEventHandler GetClueInfoCompleted;
        
        /// <remarks/>
        public event GetDateStateCompletedEventHandler GetDateStateCompleted;
        
        /// <remarks/>
        public event AddScheduleCompletedEventHandler AddScheduleCompleted;
        
        /// <remarks/>
        public event GetScheduleCompletedEventHandler GetScheduleCompleted;
        
        /// <remarks/>
        public event DeleteScheduleCompletedEventHandler DeleteScheduleCompleted;
        
        /// <remarks/>
        public event GetPersonalgoalCompletedEventHandler GetPersonalgoalCompleted;
        
        /// <remarks/>
        public event GetTreeInfoCompletedEventHandler GetTreeInfoCompleted;
        
        /// <remarks/>
        public event GetStaffInfoCompletedEventHandler GetStaffInfoCompleted;
        
        /// <remarks/>
        public event AddStaffCompletedEventHandler AddStaffCompleted;
        
        /// <remarks/>
        public event UpdateStaffCompletedEventHandler UpdateStaffCompleted;
        
        /// <remarks/>
        public event DeleteStaffCompletedEventHandler DeleteStaffCompleted;
        
        /// <remarks/>
        public event GetIdNameCompletedEventHandler GetIdNameCompleted;
        
        /// <remarks/>
        public event GetStaffInfosCompletedEventHandler GetStaffInfosCompleted;
        
        /// <remarks/>
        public event TheClientInfoCompletedEventHandler TheClientInfoCompleted;
        
        /// <remarks/>
        public event TheClientBusinessInfoCompletedEventHandler TheClientBusinessInfoCompleted;
        
        /// <remarks/>
        public event AddNewsInfoCompletedEventHandler AddNewsInfoCompleted;
        
        /// <remarks/>
        public event TheNewsInfoCompletedEventHandler TheNewsInfoCompleted;
        
        /// <remarks/>
        public event UpdateNewsInfoCompletedEventHandler UpdateNewsInfoCompleted;
        
        /// <remarks/>
        public event DeleteNewsInfoCompletedEventHandler DeleteNewsInfoCompleted;
        
        /// <remarks/>
        public event GetAllClientsStateInfoCompletedEventHandler GetAllClientsStateInfoCompleted;
        
        /// <remarks/>
        public event JoinQueryCompletedEventHandler JoinQueryCompleted;
        
        /// <remarks/>
        public event AddIndexCompletedEventHandler AddIndexCompleted;
        
        /// <remarks/>
        public event UpDateIndexCompletedEventHandler UpDateIndexCompleted;
        
        /// <remarks/>
        public event AlterTheRootPasswordCompletedEventHandler AlterTheRootPasswordCompleted;
        
        /// <remarks/>
        public event StaffAssClientCompletedEventHandler StaffAssClientCompleted;
        
        /// <remarks/>
        public event DeleteImagePathCompletedEventHandler DeleteImagePathCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserLogin(int UserId, string Password) {
            object[] results = this.Invoke("UserLogin", new object[] {
                        UserId,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserLoginAsync(int UserId, string Password) {
            this.UserLoginAsync(UserId, Password, null);
        }
        
        /// <remarks/>
        public void UserLoginAsync(int UserId, string Password, object userState) {
            if ((this.UserLoginOperationCompleted == null)) {
                this.UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginOperationCompleted);
            }
            this.InvokeAsync("UserLogin", new object[] {
                        UserId,
                        Password}, this.UserLoginOperationCompleted, userState);
        }
        
        private void OnUserLoginOperationCompleted(object arg) {
            if ((this.UserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] UserCheck(int UserId, string Password) {
            object[] results = this.Invoke("UserCheck", new object[] {
                        UserId,
                        Password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void UserCheckAsync(int UserId, string Password) {
            this.UserCheckAsync(UserId, Password, null);
        }
        
        /// <remarks/>
        public void UserCheckAsync(int UserId, string Password, object userState) {
            if ((this.UserCheckOperationCompleted == null)) {
                this.UserCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserCheckOperationCompleted);
            }
            this.InvokeAsync("UserCheck", new object[] {
                        UserId,
                        Password}, this.UserCheckOperationCompleted, userState);
        }
        
        private void OnUserCheckOperationCompleted(object arg) {
            if ((this.UserCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserCheckCompleted(this, new UserCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCustomerInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertCustomerInfo(System.DateTime dateTime, string cName, string cPhone, string cPlot, string cHouseType, string cPriority, int uId, string cSate, string clientType) {
            object[] results = this.Invoke("InsertCustomerInfo", new object[] {
                        dateTime,
                        cName,
                        cPhone,
                        cPlot,
                        cHouseType,
                        cPriority,
                        uId,
                        cSate,
                        clientType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCustomerInfoAsync(System.DateTime dateTime, string cName, string cPhone, string cPlot, string cHouseType, string cPriority, int uId, string cSate, string clientType) {
            this.InsertCustomerInfoAsync(dateTime, cName, cPhone, cPlot, cHouseType, cPriority, uId, cSate, clientType, null);
        }
        
        /// <remarks/>
        public void InsertCustomerInfoAsync(System.DateTime dateTime, string cName, string cPhone, string cPlot, string cHouseType, string cPriority, int uId, string cSate, string clientType, object userState) {
            if ((this.InsertCustomerInfoOperationCompleted == null)) {
                this.InsertCustomerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCustomerInfoOperationCompleted);
            }
            this.InvokeAsync("InsertCustomerInfo", new object[] {
                        dateTime,
                        cName,
                        cPhone,
                        cPlot,
                        cHouseType,
                        cPriority,
                        uId,
                        cSate,
                        clientType}, this.InsertCustomerInfoOperationCompleted, userState);
        }
        
        private void OnInsertCustomerInfoOperationCompleted(object arg) {
            if ((this.InsertCustomerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCustomerInfoCompleted(this, new InsertCustomerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckPhone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckPhone(string cPhone) {
            object[] results = this.Invoke("CheckPhone", new object[] {
                        cPhone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPhoneAsync(string cPhone) {
            this.CheckPhoneAsync(cPhone, null);
        }
        
        /// <remarks/>
        public void CheckPhoneAsync(string cPhone, object userState) {
            if ((this.CheckPhoneOperationCompleted == null)) {
                this.CheckPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPhoneOperationCompleted);
            }
            this.InvokeAsync("CheckPhone", new object[] {
                        cPhone}, this.CheckPhoneOperationCompleted, userState);
        }
        
        private void OnCheckPhoneOperationCompleted(object arg) {
            if ((this.CheckPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPhoneCompleted(this, new CheckPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectSthClientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SelectSthClientInfo(int uid) {
            object[] results = this.Invoke("SelectSthClientInfo", new object[] {
                        uid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectSthClientInfoAsync(int uid) {
            this.SelectSthClientInfoAsync(uid, null);
        }
        
        /// <remarks/>
        public void SelectSthClientInfoAsync(int uid, object userState) {
            if ((this.SelectSthClientInfoOperationCompleted == null)) {
                this.SelectSthClientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectSthClientInfoOperationCompleted);
            }
            this.InvokeAsync("SelectSthClientInfo", new object[] {
                        uid}, this.SelectSthClientInfoOperationCompleted, userState);
        }
        
        private void OnSelectSthClientInfoOperationCompleted(object arg) {
            if ((this.SelectSthClientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectSthClientInfoCompleted(this, new SelectSthClientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectClientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SelectClientInfo(int uid) {
            object[] results = this.Invoke("SelectClientInfo", new object[] {
                        uid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectClientInfoAsync(int uid) {
            this.SelectClientInfoAsync(uid, null);
        }
        
        /// <remarks/>
        public void SelectClientInfoAsync(int uid, object userState) {
            if ((this.SelectClientInfoOperationCompleted == null)) {
                this.SelectClientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectClientInfoOperationCompleted);
            }
            this.InvokeAsync("SelectClientInfo", new object[] {
                        uid}, this.SelectClientInfoOperationCompleted, userState);
        }
        
        private void OnSelectClientInfoOperationCompleted(object arg) {
            if ((this.SelectClientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectClientInfoCompleted(this, new SelectClientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePersonalInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeletePersonalInfo(string phone) {
            object[] results = this.Invoke("DeletePersonalInfo", new object[] {
                        phone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePersonalInfoAsync(string phone) {
            this.DeletePersonalInfoAsync(phone, null);
        }
        
        /// <remarks/>
        public void DeletePersonalInfoAsync(string phone, object userState) {
            if ((this.DeletePersonalInfoOperationCompleted == null)) {
                this.DeletePersonalInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePersonalInfoOperationCompleted);
            }
            this.InvokeAsync("DeletePersonalInfo", new object[] {
                        phone}, this.DeletePersonalInfoOperationCompleted, userState);
        }
        
        private void OnDeletePersonalInfoOperationCompleted(object arg) {
            if ((this.DeletePersonalInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePersonalInfoCompleted(this, new DeletePersonalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectPersonalInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SelectPersonalInfo(string phone) {
            object[] results = this.Invoke("SelectPersonalInfo", new object[] {
                        phone});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectPersonalInfoAsync(string phone) {
            this.SelectPersonalInfoAsync(phone, null);
        }
        
        /// <remarks/>
        public void SelectPersonalInfoAsync(string phone, object userState) {
            if ((this.SelectPersonalInfoOperationCompleted == null)) {
                this.SelectPersonalInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectPersonalInfoOperationCompleted);
            }
            this.InvokeAsync("SelectPersonalInfo", new object[] {
                        phone}, this.SelectPersonalInfoOperationCompleted, userState);
        }
        
        private void OnSelectPersonalInfoOperationCompleted(object arg) {
            if ((this.SelectPersonalInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectPersonalInfoCompleted(this, new SelectPersonalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePriorityState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePriorityState(string priority, string state, string phone) {
            object[] results = this.Invoke("UpdatePriorityState", new object[] {
                        priority,
                        state,
                        phone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePriorityStateAsync(string priority, string state, string phone) {
            this.UpdatePriorityStateAsync(priority, state, phone, null);
        }
        
        /// <remarks/>
        public void UpdatePriorityStateAsync(string priority, string state, string phone, object userState) {
            if ((this.UpdatePriorityStateOperationCompleted == null)) {
                this.UpdatePriorityStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePriorityStateOperationCompleted);
            }
            this.InvokeAsync("UpdatePriorityState", new object[] {
                        priority,
                        state,
                        phone}, this.UpdatePriorityStateOperationCompleted, userState);
        }
        
        private void OnUpdatePriorityStateOperationCompleted(object arg) {
            if ((this.UpdatePriorityStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePriorityStateCompleted(this, new UpdatePriorityStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTheLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertTheLog(string theDate, string thePhone, string theDetail) {
            object[] results = this.Invoke("InsertTheLog", new object[] {
                        theDate,
                        thePhone,
                        theDetail});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTheLogAsync(string theDate, string thePhone, string theDetail) {
            this.InsertTheLogAsync(theDate, thePhone, theDetail, null);
        }
        
        /// <remarks/>
        public void InsertTheLogAsync(string theDate, string thePhone, string theDetail, object userState) {
            if ((this.InsertTheLogOperationCompleted == null)) {
                this.InsertTheLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTheLogOperationCompleted);
            }
            this.InvokeAsync("InsertTheLog", new object[] {
                        theDate,
                        thePhone,
                        theDetail}, this.InsertTheLogOperationCompleted, userState);
        }
        
        private void OnInsertTheLogOperationCompleted(object arg) {
            if ((this.InsertTheLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTheLogCompleted(this, new InsertTheLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTheLogs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetTheLogs(string thePhone) {
            object[] results = this.Invoke("GetTheLogs", new object[] {
                        thePhone});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTheLogsAsync(string thePhone) {
            this.GetTheLogsAsync(thePhone, null);
        }
        
        /// <remarks/>
        public void GetTheLogsAsync(string thePhone, object userState) {
            if ((this.GetTheLogsOperationCompleted == null)) {
                this.GetTheLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTheLogsOperationCompleted);
            }
            this.InvokeAsync("GetTheLogs", new object[] {
                        thePhone}, this.GetTheLogsOperationCompleted, userState);
        }
        
        private void OnGetTheLogsOperationCompleted(object arg) {
            if ((this.GetTheLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTheLogsCompleted(this, new GetTheLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateClientInfos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateClientInfos(System.DateTime dateTime, string cName, string cPhone, string cPlot, string cHouseType, int uId, string cClientType) {
            object[] results = this.Invoke("UpdateClientInfos", new object[] {
                        dateTime,
                        cName,
                        cPhone,
                        cPlot,
                        cHouseType,
                        uId,
                        cClientType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClientInfosAsync(System.DateTime dateTime, string cName, string cPhone, string cPlot, string cHouseType, int uId, string cClientType) {
            this.UpdateClientInfosAsync(dateTime, cName, cPhone, cPlot, cHouseType, uId, cClientType, null);
        }
        
        /// <remarks/>
        public void UpdateClientInfosAsync(System.DateTime dateTime, string cName, string cPhone, string cPlot, string cHouseType, int uId, string cClientType, object userState) {
            if ((this.UpdateClientInfosOperationCompleted == null)) {
                this.UpdateClientInfosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientInfosOperationCompleted);
            }
            this.InvokeAsync("UpdateClientInfos", new object[] {
                        dateTime,
                        cName,
                        cPhone,
                        cPlot,
                        cHouseType,
                        uId,
                        cClientType}, this.UpdateClientInfosOperationCompleted, userState);
        }
        
        private void OnUpdateClientInfosOperationCompleted(object arg) {
            if ((this.UpdateClientInfosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientInfosCompleted(this, new UpdateClientInfosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanReceiveClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ScanReceiveClient(string phone, int id, System.DateTime dateTime) {
            object[] results = this.Invoke("ScanReceiveClient", new object[] {
                        phone,
                        id,
                        dateTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ScanReceiveClientAsync(string phone, int id, System.DateTime dateTime) {
            this.ScanReceiveClientAsync(phone, id, dateTime, null);
        }
        
        /// <remarks/>
        public void ScanReceiveClientAsync(string phone, int id, System.DateTime dateTime, object userState) {
            if ((this.ScanReceiveClientOperationCompleted == null)) {
                this.ScanReceiveClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScanReceiveClientOperationCompleted);
            }
            this.InvokeAsync("ScanReceiveClient", new object[] {
                        phone,
                        id,
                        dateTime}, this.ScanReceiveClientOperationCompleted, userState);
        }
        
        private void OnScanReceiveClientOperationCompleted(object arg) {
            if ((this.ScanReceiveClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScanReceiveClientCompleted(this, new ScanReceiveClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckContract(string phone) {
            object[] results = this.Invoke("CheckContract", new object[] {
                        phone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckContractAsync(string phone) {
            this.CheckContractAsync(phone, null);
        }
        
        /// <remarks/>
        public void CheckContractAsync(string phone, object userState) {
            if ((this.CheckContractOperationCompleted == null)) {
                this.CheckContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckContractOperationCompleted);
            }
            this.InvokeAsync("CheckContract", new object[] {
                        phone}, this.CheckContractOperationCompleted, userState);
        }
        
        private void OnCheckContractOperationCompleted(object arg) {
            if ((this.CheckContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckContractCompleted(this, new CheckContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertContract(System.DateTime dateTime, string Name, string Phone, string Address, string houseType, float Area, float Budget, float Payment, int userId) {
            object[] results = this.Invoke("InsertContract", new object[] {
                        dateTime,
                        Name,
                        Phone,
                        Address,
                        houseType,
                        Area,
                        Budget,
                        Payment,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertContractAsync(System.DateTime dateTime, string Name, string Phone, string Address, string houseType, float Area, float Budget, float Payment, int userId) {
            this.InsertContractAsync(dateTime, Name, Phone, Address, houseType, Area, Budget, Payment, userId, null);
        }
        
        /// <remarks/>
        public void InsertContractAsync(System.DateTime dateTime, string Name, string Phone, string Address, string houseType, float Area, float Budget, float Payment, int userId, object userState) {
            if ((this.InsertContractOperationCompleted == null)) {
                this.InsertContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertContractOperationCompleted);
            }
            this.InvokeAsync("InsertContract", new object[] {
                        dateTime,
                        Name,
                        Phone,
                        Address,
                        houseType,
                        Area,
                        Budget,
                        Payment,
                        userId}, this.InsertContractOperationCompleted, userState);
        }
        
        private void OnInsertContractOperationCompleted(object arg) {
            if ((this.InsertContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertContractCompleted(this, new InsertContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateContractInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateContractInfo(System.DateTime dateTime, string Name, string Phone, string Address, string houseType, float Area, float Budget, float Payment, int userId) {
            object[] results = this.Invoke("UpdateContractInfo", new object[] {
                        dateTime,
                        Name,
                        Phone,
                        Address,
                        houseType,
                        Area,
                        Budget,
                        Payment,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContractInfoAsync(System.DateTime dateTime, string Name, string Phone, string Address, string houseType, float Area, float Budget, float Payment, int userId) {
            this.UpdateContractInfoAsync(dateTime, Name, Phone, Address, houseType, Area, Budget, Payment, userId, null);
        }
        
        /// <remarks/>
        public void UpdateContractInfoAsync(System.DateTime dateTime, string Name, string Phone, string Address, string houseType, float Area, float Budget, float Payment, int userId, object userState) {
            if ((this.UpdateContractInfoOperationCompleted == null)) {
                this.UpdateContractInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContractInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateContractInfo", new object[] {
                        dateTime,
                        Name,
                        Phone,
                        Address,
                        houseType,
                        Area,
                        Budget,
                        Payment,
                        userId}, this.UpdateContractInfoOperationCompleted, userState);
        }
        
        private void OnUpdateContractInfoOperationCompleted(object arg) {
            if ((this.UpdateContractInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContractInfoCompleted(this, new UpdateContractInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectContractInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SelectContractInfo(string phone) {
            object[] results = this.Invoke("SelectContractInfo", new object[] {
                        phone});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectContractInfoAsync(string phone) {
            this.SelectContractInfoAsync(phone, null);
        }
        
        /// <remarks/>
        public void SelectContractInfoAsync(string phone, object userState) {
            if ((this.SelectContractInfoOperationCompleted == null)) {
                this.SelectContractInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectContractInfoOperationCompleted);
            }
            this.InvokeAsync("SelectContractInfo", new object[] {
                        phone}, this.SelectContractInfoOperationCompleted, userState);
        }
        
        private void OnSelectContractInfoOperationCompleted(object arg) {
            if ((this.SelectContractInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectContractInfoCompleted(this, new SelectContractInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteContractInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteContractInfo(string phone) {
            object[] results = this.Invoke("DeleteContractInfo", new object[] {
                        phone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteContractInfoAsync(string phone) {
            this.DeleteContractInfoAsync(phone, null);
        }
        
        /// <remarks/>
        public void DeleteContractInfoAsync(string phone, object userState) {
            if ((this.DeleteContractInfoOperationCompleted == null)) {
                this.DeleteContractInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContractInfoOperationCompleted);
            }
            this.InvokeAsync("DeleteContractInfo", new object[] {
                        phone}, this.DeleteContractInfoOperationCompleted, userState);
        }
        
        private void OnDeleteContractInfoOperationCompleted(object arg) {
            if ((this.DeleteContractInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContractInfoCompleted(this, new DeleteContractInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertProjectInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertProjectInfo(string name, string phone, System.DateTime dateTime, int timeLimit, float material, float labor, float manage, float design, float others, float total, int userId) {
            object[] results = this.Invoke("InsertProjectInfo", new object[] {
                        name,
                        phone,
                        dateTime,
                        timeLimit,
                        material,
                        labor,
                        manage,
                        design,
                        others,
                        total,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertProjectInfoAsync(string name, string phone, System.DateTime dateTime, int timeLimit, float material, float labor, float manage, float design, float others, float total, int userId) {
            this.InsertProjectInfoAsync(name, phone, dateTime, timeLimit, material, labor, manage, design, others, total, userId, null);
        }
        
        /// <remarks/>
        public void InsertProjectInfoAsync(string name, string phone, System.DateTime dateTime, int timeLimit, float material, float labor, float manage, float design, float others, float total, int userId, object userState) {
            if ((this.InsertProjectInfoOperationCompleted == null)) {
                this.InsertProjectInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProjectInfoOperationCompleted);
            }
            this.InvokeAsync("InsertProjectInfo", new object[] {
                        name,
                        phone,
                        dateTime,
                        timeLimit,
                        material,
                        labor,
                        manage,
                        design,
                        others,
                        total,
                        userId}, this.InsertProjectInfoOperationCompleted, userState);
        }
        
        private void OnInsertProjectInfoOperationCompleted(object arg) {
            if ((this.InsertProjectInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProjectInfoCompleted(this, new InsertProjectInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectProjectListInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SelectProjectListInfo(string phone) {
            object[] results = this.Invoke("SelectProjectListInfo", new object[] {
                        phone});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectProjectListInfoAsync(string phone) {
            this.SelectProjectListInfoAsync(phone, null);
        }
        
        /// <remarks/>
        public void SelectProjectListInfoAsync(string phone, object userState) {
            if ((this.SelectProjectListInfoOperationCompleted == null)) {
                this.SelectProjectListInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectProjectListInfoOperationCompleted);
            }
            this.InvokeAsync("SelectProjectListInfo", new object[] {
                        phone}, this.SelectProjectListInfoOperationCompleted, userState);
        }
        
        private void OnSelectProjectListInfoOperationCompleted(object arg) {
            if ((this.SelectProjectListInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectProjectListInfoCompleted(this, new SelectProjectListInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProjectListInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProjectListInfo(string phone, System.DateTime dateTime, int timeLimit, float material, float labor, float manage, float design, float others, float total) {
            object[] results = this.Invoke("UpdateProjectListInfo", new object[] {
                        phone,
                        dateTime,
                        timeLimit,
                        material,
                        labor,
                        manage,
                        design,
                        others,
                        total});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProjectListInfoAsync(string phone, System.DateTime dateTime, int timeLimit, float material, float labor, float manage, float design, float others, float total) {
            this.UpdateProjectListInfoAsync(phone, dateTime, timeLimit, material, labor, manage, design, others, total, null);
        }
        
        /// <remarks/>
        public void UpdateProjectListInfoAsync(string phone, System.DateTime dateTime, int timeLimit, float material, float labor, float manage, float design, float others, float total, object userState) {
            if ((this.UpdateProjectListInfoOperationCompleted == null)) {
                this.UpdateProjectListInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProjectListInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateProjectListInfo", new object[] {
                        phone,
                        dateTime,
                        timeLimit,
                        material,
                        labor,
                        manage,
                        design,
                        others,
                        total}, this.UpdateProjectListInfoOperationCompleted, userState);
        }
        
        private void OnUpdateProjectListInfoOperationCompleted(object arg) {
            if ((this.UpdateProjectListInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProjectListInfoCompleted(this, new UpdateProjectListInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProjectListInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteProjectListInfo(string phone) {
            object[] results = this.Invoke("DeleteProjectListInfo", new object[] {
                        phone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProjectListInfoAsync(string phone) {
            this.DeleteProjectListInfoAsync(phone, null);
        }
        
        /// <remarks/>
        public void DeleteProjectListInfoAsync(string phone, object userState) {
            if ((this.DeleteProjectListInfoOperationCompleted == null)) {
                this.DeleteProjectListInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProjectListInfoOperationCompleted);
            }
            this.InvokeAsync("DeleteProjectListInfo", new object[] {
                        phone}, this.DeleteProjectListInfoOperationCompleted, userState);
        }
        
        private void OnDeleteProjectListInfoOperationCompleted(object arg) {
            if ((this.DeleteProjectListInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProjectListInfoCompleted(this, new DeleteProjectListInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckBusiness", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckBusiness(string phone) {
            object[] results = this.Invoke("CheckBusiness", new object[] {
                        phone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBusinessAsync(string phone) {
            this.CheckBusinessAsync(phone, null);
        }
        
        /// <remarks/>
        public void CheckBusinessAsync(string phone, object userState) {
            if ((this.CheckBusinessOperationCompleted == null)) {
                this.CheckBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBusinessOperationCompleted);
            }
            this.InvokeAsync("CheckBusiness", new object[] {
                        phone}, this.CheckBusinessOperationCompleted, userState);
        }
        
        private void OnCheckBusinessOperationCompleted(object arg) {
            if ((this.CheckBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBusinessCompleted(this, new CheckBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBusinessDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertBusinessDetail(string date, string phone, string state) {
            object[] results = this.Invoke("InsertBusinessDetail", new object[] {
                        date,
                        phone,
                        state});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBusinessDetailAsync(string date, string phone, string state) {
            this.InsertBusinessDetailAsync(date, phone, state, null);
        }
        
        /// <remarks/>
        public void InsertBusinessDetailAsync(string date, string phone, string state, object userState) {
            if ((this.InsertBusinessDetailOperationCompleted == null)) {
                this.InsertBusinessDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBusinessDetailOperationCompleted);
            }
            this.InvokeAsync("InsertBusinessDetail", new object[] {
                        date,
                        phone,
                        state}, this.InsertBusinessDetailOperationCompleted, userState);
        }
        
        private void OnInsertBusinessDetailOperationCompleted(object arg) {
            if ((this.InsertBusinessDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBusinessDetailCompleted(this, new InsertBusinessDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectBusinessInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SelectBusinessInfo(string phone) {
            object[] results = this.Invoke("SelectBusinessInfo", new object[] {
                        phone});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectBusinessInfoAsync(string phone) {
            this.SelectBusinessInfoAsync(phone, null);
        }
        
        /// <remarks/>
        public void SelectBusinessInfoAsync(string phone, object userState) {
            if ((this.SelectBusinessInfoOperationCompleted == null)) {
                this.SelectBusinessInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectBusinessInfoOperationCompleted);
            }
            this.InvokeAsync("SelectBusinessInfo", new object[] {
                        phone}, this.SelectBusinessInfoOperationCompleted, userState);
        }
        
        private void OnSelectBusinessInfoOperationCompleted(object arg) {
            if ((this.SelectBusinessInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectBusinessInfoCompleted(this, new SelectBusinessInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteBusinessInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteBusinessInfo(string phone) {
            object[] results = this.Invoke("DeleteBusinessInfo", new object[] {
                        phone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBusinessInfoAsync(string phone) {
            this.DeleteBusinessInfoAsync(phone, null);
        }
        
        /// <remarks/>
        public void DeleteBusinessInfoAsync(string phone, object userState) {
            if ((this.DeleteBusinessInfoOperationCompleted == null)) {
                this.DeleteBusinessInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBusinessInfoOperationCompleted);
            }
            this.InvokeAsync("DeleteBusinessInfo", new object[] {
                        phone}, this.DeleteBusinessInfoOperationCompleted, userState);
        }
        
        private void OnDeleteBusinessInfoOperationCompleted(object arg) {
            if ((this.DeleteBusinessInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBusinessInfoCompleted(this, new DeleteBusinessInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadImg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadImg([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileBytes, string phone) {
            object[] results = this.Invoke("UploadImg", new object[] {
                        fileBytes,
                        phone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadImgAsync(byte[] fileBytes, string phone) {
            this.UploadImgAsync(fileBytes, phone, null);
        }
        
        /// <remarks/>
        public void UploadImgAsync(byte[] fileBytes, string phone, object userState) {
            if ((this.UploadImgOperationCompleted == null)) {
                this.UploadImgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadImgOperationCompleted);
            }
            this.InvokeAsync("UploadImg", new object[] {
                        fileBytes,
                        phone}, this.UploadImgOperationCompleted, userState);
        }
        
        private void OnUploadImgOperationCompleted(object arg) {
            if ((this.UploadImgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadImgCompleted(this, new UploadImgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadImg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] LoadImg(string id) {
            object[] results = this.Invoke("LoadImg", new object[] {
                        id});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadImgAsync(string id) {
            this.LoadImgAsync(id, null);
        }
        
        /// <remarks/>
        public void LoadImgAsync(string id, object userState) {
            if ((this.LoadImgOperationCompleted == null)) {
                this.LoadImgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadImgOperationCompleted);
            }
            this.InvokeAsync("LoadImg", new object[] {
                        id}, this.LoadImgOperationCompleted, userState);
        }
        
        private void OnLoadImgOperationCompleted(object arg) {
            if ((this.LoadImgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadImgCompleted(this, new LoadImgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClueInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetClueInfo(int userId) {
            object[] results = this.Invoke("GetClueInfo", new object[] {
                        userId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClueInfoAsync(int userId) {
            this.GetClueInfoAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetClueInfoAsync(int userId, object userState) {
            if ((this.GetClueInfoOperationCompleted == null)) {
                this.GetClueInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClueInfoOperationCompleted);
            }
            this.InvokeAsync("GetClueInfo", new object[] {
                        userId}, this.GetClueInfoOperationCompleted, userState);
        }
        
        private void OnGetClueInfoOperationCompleted(object arg) {
            if ((this.GetClueInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClueInfoCompleted(this, new GetClueInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDateState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDateState(int theId) {
            object[] results = this.Invoke("GetDateState", new object[] {
                        theId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDateStateAsync(int theId) {
            this.GetDateStateAsync(theId, null);
        }
        
        /// <remarks/>
        public void GetDateStateAsync(int theId, object userState) {
            if ((this.GetDateStateOperationCompleted == null)) {
                this.GetDateStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDateStateOperationCompleted);
            }
            this.InvokeAsync("GetDateState", new object[] {
                        theId}, this.GetDateStateOperationCompleted, userState);
        }
        
        private void OnGetDateStateOperationCompleted(object arg) {
            if ((this.GetDateStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDateStateCompleted(this, new GetDateStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddSchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddSchedule(int UserId, System.DateTime theDate, string theStartTime, string theEndTime, string theColor, string theSubject) {
            object[] results = this.Invoke("AddSchedule", new object[] {
                        UserId,
                        theDate,
                        theStartTime,
                        theEndTime,
                        theColor,
                        theSubject});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddScheduleAsync(int UserId, System.DateTime theDate, string theStartTime, string theEndTime, string theColor, string theSubject) {
            this.AddScheduleAsync(UserId, theDate, theStartTime, theEndTime, theColor, theSubject, null);
        }
        
        /// <remarks/>
        public void AddScheduleAsync(int UserId, System.DateTime theDate, string theStartTime, string theEndTime, string theColor, string theSubject, object userState) {
            if ((this.AddScheduleOperationCompleted == null)) {
                this.AddScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddScheduleOperationCompleted);
            }
            this.InvokeAsync("AddSchedule", new object[] {
                        UserId,
                        theDate,
                        theStartTime,
                        theEndTime,
                        theColor,
                        theSubject}, this.AddScheduleOperationCompleted, userState);
        }
        
        private void OnAddScheduleOperationCompleted(object arg) {
            if ((this.AddScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddScheduleCompleted(this, new AddScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetSchedule(int theId) {
            object[] results = this.Invoke("GetSchedule", new object[] {
                        theId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleAsync(int theId) {
            this.GetScheduleAsync(theId, null);
        }
        
        /// <remarks/>
        public void GetScheduleAsync(int theId, object userState) {
            if ((this.GetScheduleOperationCompleted == null)) {
                this.GetScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleOperationCompleted);
            }
            this.InvokeAsync("GetSchedule", new object[] {
                        theId}, this.GetScheduleOperationCompleted, userState);
        }
        
        private void OnGetScheduleOperationCompleted(object arg) {
            if ((this.GetScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleCompleted(this, new GetScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteSchedule(int theId, System.DateTime theDate, string theStartTime, string theEndTime) {
            object[] results = this.Invoke("DeleteSchedule", new object[] {
                        theId,
                        theDate,
                        theStartTime,
                        theEndTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(int theId, System.DateTime theDate, string theStartTime, string theEndTime) {
            this.DeleteScheduleAsync(theId, theDate, theStartTime, theEndTime, null);
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(int theId, System.DateTime theDate, string theStartTime, string theEndTime, object userState) {
            if ((this.DeleteScheduleOperationCompleted == null)) {
                this.DeleteScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleOperationCompleted);
            }
            this.InvokeAsync("DeleteSchedule", new object[] {
                        theId,
                        theDate,
                        theStartTime,
                        theEndTime}, this.DeleteScheduleOperationCompleted, userState);
        }
        
        private void OnDeleteScheduleOperationCompleted(object arg) {
            if ((this.DeleteScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScheduleCompleted(this, new DeleteScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPersonalgoal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetPersonalgoal(string theMonth) {
            object[] results = this.Invoke("GetPersonalgoal", new object[] {
                        theMonth});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonalgoalAsync(string theMonth) {
            this.GetPersonalgoalAsync(theMonth, null);
        }
        
        /// <remarks/>
        public void GetPersonalgoalAsync(string theMonth, object userState) {
            if ((this.GetPersonalgoalOperationCompleted == null)) {
                this.GetPersonalgoalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonalgoalOperationCompleted);
            }
            this.InvokeAsync("GetPersonalgoal", new object[] {
                        theMonth}, this.GetPersonalgoalOperationCompleted, userState);
        }
        
        private void OnGetPersonalgoalOperationCompleted(object arg) {
            if ((this.GetPersonalgoalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonalgoalCompleted(this, new GetPersonalgoalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTreeInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetTreeInfo() {
            object[] results = this.Invoke("GetTreeInfo", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeInfoAsync() {
            this.GetTreeInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetTreeInfoAsync(object userState) {
            if ((this.GetTreeInfoOperationCompleted == null)) {
                this.GetTreeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeInfoOperationCompleted);
            }
            this.InvokeAsync("GetTreeInfo", new object[0], this.GetTreeInfoOperationCompleted, userState);
        }
        
        private void OnGetTreeInfoOperationCompleted(object arg) {
            if ((this.GetTreeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeInfoCompleted(this, new GetTreeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStaffInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetStaffInfo() {
            object[] results = this.Invoke("GetStaffInfo", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffInfoAsync() {
            this.GetStaffInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetStaffInfoAsync(object userState) {
            if ((this.GetStaffInfoOperationCompleted == null)) {
                this.GetStaffInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffInfoOperationCompleted);
            }
            this.InvokeAsync("GetStaffInfo", new object[0], this.GetStaffInfoOperationCompleted, userState);
        }
        
        private void OnGetStaffInfoOperationCompleted(object arg) {
            if ((this.GetStaffInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffInfoCompleted(this, new GetStaffInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddStaff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddStaff(string thePassword, int theClass, string theDistinct, string theName, string thePhone) {
            object[] results = this.Invoke("AddStaff", new object[] {
                        thePassword,
                        theClass,
                        theDistinct,
                        theName,
                        thePhone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddStaffAsync(string thePassword, int theClass, string theDistinct, string theName, string thePhone) {
            this.AddStaffAsync(thePassword, theClass, theDistinct, theName, thePhone, null);
        }
        
        /// <remarks/>
        public void AddStaffAsync(string thePassword, int theClass, string theDistinct, string theName, string thePhone, object userState) {
            if ((this.AddStaffOperationCompleted == null)) {
                this.AddStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStaffOperationCompleted);
            }
            this.InvokeAsync("AddStaff", new object[] {
                        thePassword,
                        theClass,
                        theDistinct,
                        theName,
                        thePhone}, this.AddStaffOperationCompleted, userState);
        }
        
        private void OnAddStaffOperationCompleted(object arg) {
            if ((this.AddStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStaffCompleted(this, new AddStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStaff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStaff(int theId, string thePassword, string theArea, string theName, string thePhone) {
            object[] results = this.Invoke("UpdateStaff", new object[] {
                        theId,
                        thePassword,
                        theArea,
                        theName,
                        thePhone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStaffAsync(int theId, string thePassword, string theArea, string theName, string thePhone) {
            this.UpdateStaffAsync(theId, thePassword, theArea, theName, thePhone, null);
        }
        
        /// <remarks/>
        public void UpdateStaffAsync(int theId, string thePassword, string theArea, string theName, string thePhone, object userState) {
            if ((this.UpdateStaffOperationCompleted == null)) {
                this.UpdateStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStaffOperationCompleted);
            }
            this.InvokeAsync("UpdateStaff", new object[] {
                        theId,
                        thePassword,
                        theArea,
                        theName,
                        thePhone}, this.UpdateStaffOperationCompleted, userState);
        }
        
        private void OnUpdateStaffOperationCompleted(object arg) {
            if ((this.UpdateStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStaffCompleted(this, new UpdateStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStaff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteStaff(int theId) {
            object[] results = this.Invoke("DeleteStaff", new object[] {
                        theId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStaffAsync(int theId) {
            this.DeleteStaffAsync(theId, null);
        }
        
        /// <remarks/>
        public void DeleteStaffAsync(int theId, object userState) {
            if ((this.DeleteStaffOperationCompleted == null)) {
                this.DeleteStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteStaff", new object[] {
                        theId}, this.DeleteStaffOperationCompleted, userState);
        }
        
        private void OnDeleteStaffOperationCompleted(object arg) {
            if ((this.DeleteStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStaffCompleted(this, new DeleteStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIdName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetIdName(string distinct) {
            object[] results = this.Invoke("GetIdName", new object[] {
                        distinct});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetIdNameAsync(string distinct) {
            this.GetIdNameAsync(distinct, null);
        }
        
        /// <remarks/>
        public void GetIdNameAsync(string distinct, object userState) {
            if ((this.GetIdNameOperationCompleted == null)) {
                this.GetIdNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIdNameOperationCompleted);
            }
            this.InvokeAsync("GetIdName", new object[] {
                        distinct}, this.GetIdNameOperationCompleted, userState);
        }
        
        private void OnGetIdNameOperationCompleted(object arg) {
            if ((this.GetIdNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIdNameCompleted(this, new GetIdNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStaffInfos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetStaffInfos(int theId) {
            object[] results = this.Invoke("GetStaffInfos", new object[] {
                        theId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffInfosAsync(int theId) {
            this.GetStaffInfosAsync(theId, null);
        }
        
        /// <remarks/>
        public void GetStaffInfosAsync(int theId, object userState) {
            if ((this.GetStaffInfosOperationCompleted == null)) {
                this.GetStaffInfosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffInfosOperationCompleted);
            }
            this.InvokeAsync("GetStaffInfos", new object[] {
                        theId}, this.GetStaffInfosOperationCompleted, userState);
        }
        
        private void OnGetStaffInfosOperationCompleted(object arg) {
            if ((this.GetStaffInfosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffInfosCompleted(this, new GetStaffInfosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TheClientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] TheClientInfo(int theUserId) {
            object[] results = this.Invoke("TheClientInfo", new object[] {
                        theUserId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void TheClientInfoAsync(int theUserId) {
            this.TheClientInfoAsync(theUserId, null);
        }
        
        /// <remarks/>
        public void TheClientInfoAsync(int theUserId, object userState) {
            if ((this.TheClientInfoOperationCompleted == null)) {
                this.TheClientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTheClientInfoOperationCompleted);
            }
            this.InvokeAsync("TheClientInfo", new object[] {
                        theUserId}, this.TheClientInfoOperationCompleted, userState);
        }
        
        private void OnTheClientInfoOperationCompleted(object arg) {
            if ((this.TheClientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TheClientInfoCompleted(this, new TheClientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TheClientBusinessInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] TheClientBusinessInfo(string thePhone) {
            object[] results = this.Invoke("TheClientBusinessInfo", new object[] {
                        thePhone});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void TheClientBusinessInfoAsync(string thePhone) {
            this.TheClientBusinessInfoAsync(thePhone, null);
        }
        
        /// <remarks/>
        public void TheClientBusinessInfoAsync(string thePhone, object userState) {
            if ((this.TheClientBusinessInfoOperationCompleted == null)) {
                this.TheClientBusinessInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTheClientBusinessInfoOperationCompleted);
            }
            this.InvokeAsync("TheClientBusinessInfo", new object[] {
                        thePhone}, this.TheClientBusinessInfoOperationCompleted, userState);
        }
        
        private void OnTheClientBusinessInfoOperationCompleted(object arg) {
            if ((this.TheClientBusinessInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TheClientBusinessInfoCompleted(this, new TheClientBusinessInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddNewsInfo(int theId, string thePost, string theDate, string theTheme, string theHead, string theContent) {
            object[] results = this.Invoke("AddNewsInfo", new object[] {
                        theId,
                        thePost,
                        theDate,
                        theTheme,
                        theHead,
                        theContent});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewsInfoAsync(int theId, string thePost, string theDate, string theTheme, string theHead, string theContent) {
            this.AddNewsInfoAsync(theId, thePost, theDate, theTheme, theHead, theContent, null);
        }
        
        /// <remarks/>
        public void AddNewsInfoAsync(int theId, string thePost, string theDate, string theTheme, string theHead, string theContent, object userState) {
            if ((this.AddNewsInfoOperationCompleted == null)) {
                this.AddNewsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewsInfoOperationCompleted);
            }
            this.InvokeAsync("AddNewsInfo", new object[] {
                        theId,
                        thePost,
                        theDate,
                        theTheme,
                        theHead,
                        theContent}, this.AddNewsInfoOperationCompleted, userState);
        }
        
        private void OnAddNewsInfoOperationCompleted(object arg) {
            if ((this.AddNewsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewsInfoCompleted(this, new AddNewsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TheNewsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] TheNewsInfo() {
            object[] results = this.Invoke("TheNewsInfo", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void TheNewsInfoAsync() {
            this.TheNewsInfoAsync(null);
        }
        
        /// <remarks/>
        public void TheNewsInfoAsync(object userState) {
            if ((this.TheNewsInfoOperationCompleted == null)) {
                this.TheNewsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTheNewsInfoOperationCompleted);
            }
            this.InvokeAsync("TheNewsInfo", new object[0], this.TheNewsInfoOperationCompleted, userState);
        }
        
        private void OnTheNewsInfoOperationCompleted(object arg) {
            if ((this.TheNewsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TheNewsInfoCompleted(this, new TheNewsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateNewsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateNewsInfo(int theId, string theDate, string theTheme, string theHead, string theDetail) {
            object[] results = this.Invoke("UpdateNewsInfo", new object[] {
                        theId,
                        theDate,
                        theTheme,
                        theHead,
                        theDetail});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNewsInfoAsync(int theId, string theDate, string theTheme, string theHead, string theDetail) {
            this.UpdateNewsInfoAsync(theId, theDate, theTheme, theHead, theDetail, null);
        }
        
        /// <remarks/>
        public void UpdateNewsInfoAsync(int theId, string theDate, string theTheme, string theHead, string theDetail, object userState) {
            if ((this.UpdateNewsInfoOperationCompleted == null)) {
                this.UpdateNewsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNewsInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateNewsInfo", new object[] {
                        theId,
                        theDate,
                        theTheme,
                        theHead,
                        theDetail}, this.UpdateNewsInfoOperationCompleted, userState);
        }
        
        private void OnUpdateNewsInfoOperationCompleted(object arg) {
            if ((this.UpdateNewsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNewsInfoCompleted(this, new UpdateNewsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteNewsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteNewsInfo(int theId, string theDate) {
            object[] results = this.Invoke("DeleteNewsInfo", new object[] {
                        theId,
                        theDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteNewsInfoAsync(int theId, string theDate) {
            this.DeleteNewsInfoAsync(theId, theDate, null);
        }
        
        /// <remarks/>
        public void DeleteNewsInfoAsync(int theId, string theDate, object userState) {
            if ((this.DeleteNewsInfoOperationCompleted == null)) {
                this.DeleteNewsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteNewsInfoOperationCompleted);
            }
            this.InvokeAsync("DeleteNewsInfo", new object[] {
                        theId,
                        theDate}, this.DeleteNewsInfoOperationCompleted, userState);
        }
        
        private void OnDeleteNewsInfoOperationCompleted(object arg) {
            if ((this.DeleteNewsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteNewsInfoCompleted(this, new DeleteNewsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllClientsStateInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAllClientsStateInfo() {
            object[] results = this.Invoke("GetAllClientsStateInfo", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllClientsStateInfoAsync() {
            this.GetAllClientsStateInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetAllClientsStateInfoAsync(object userState) {
            if ((this.GetAllClientsStateInfoOperationCompleted == null)) {
                this.GetAllClientsStateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllClientsStateInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllClientsStateInfo", new object[0], this.GetAllClientsStateInfoOperationCompleted, userState);
        }
        
        private void OnGetAllClientsStateInfoOperationCompleted(object arg) {
            if ((this.GetAllClientsStateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllClientsStateInfoCompleted(this, new GetAllClientsStateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/JoinQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] JoinQuery() {
            object[] results = this.Invoke("JoinQuery", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void JoinQueryAsync() {
            this.JoinQueryAsync(null);
        }
        
        /// <remarks/>
        public void JoinQueryAsync(object userState) {
            if ((this.JoinQueryOperationCompleted == null)) {
                this.JoinQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJoinQueryOperationCompleted);
            }
            this.InvokeAsync("JoinQuery", new object[0], this.JoinQueryOperationCompleted, userState);
        }
        
        private void OnJoinQueryOperationCompleted(object arg) {
            if ((this.JoinQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JoinQueryCompleted(this, new JoinQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddIndex(int theId, string theMonth, int theOrder, int theProject, int theContract) {
            object[] results = this.Invoke("AddIndex", new object[] {
                        theId,
                        theMonth,
                        theOrder,
                        theProject,
                        theContract});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddIndexAsync(int theId, string theMonth, int theOrder, int theProject, int theContract) {
            this.AddIndexAsync(theId, theMonth, theOrder, theProject, theContract, null);
        }
        
        /// <remarks/>
        public void AddIndexAsync(int theId, string theMonth, int theOrder, int theProject, int theContract, object userState) {
            if ((this.AddIndexOperationCompleted == null)) {
                this.AddIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddIndexOperationCompleted);
            }
            this.InvokeAsync("AddIndex", new object[] {
                        theId,
                        theMonth,
                        theOrder,
                        theProject,
                        theContract}, this.AddIndexOperationCompleted, userState);
        }
        
        private void OnAddIndexOperationCompleted(object arg) {
            if ((this.AddIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddIndexCompleted(this, new AddIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpDateIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpDateIndex(string theMonth, int theOrder, int theProject, int theContract) {
            object[] results = this.Invoke("UpDateIndex", new object[] {
                        theMonth,
                        theOrder,
                        theProject,
                        theContract});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpDateIndexAsync(string theMonth, int theOrder, int theProject, int theContract) {
            this.UpDateIndexAsync(theMonth, theOrder, theProject, theContract, null);
        }
        
        /// <remarks/>
        public void UpDateIndexAsync(string theMonth, int theOrder, int theProject, int theContract, object userState) {
            if ((this.UpDateIndexOperationCompleted == null)) {
                this.UpDateIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpDateIndexOperationCompleted);
            }
            this.InvokeAsync("UpDateIndex", new object[] {
                        theMonth,
                        theOrder,
                        theProject,
                        theContract}, this.UpDateIndexOperationCompleted, userState);
        }
        
        private void OnUpDateIndexOperationCompleted(object arg) {
            if ((this.UpDateIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpDateIndexCompleted(this, new UpDateIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AlterTheRootPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AlterTheRootPassword(int theId, string thePassword) {
            object[] results = this.Invoke("AlterTheRootPassword", new object[] {
                        theId,
                        thePassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AlterTheRootPasswordAsync(int theId, string thePassword) {
            this.AlterTheRootPasswordAsync(theId, thePassword, null);
        }
        
        /// <remarks/>
        public void AlterTheRootPasswordAsync(int theId, string thePassword, object userState) {
            if ((this.AlterTheRootPasswordOperationCompleted == null)) {
                this.AlterTheRootPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAlterTheRootPasswordOperationCompleted);
            }
            this.InvokeAsync("AlterTheRootPassword", new object[] {
                        theId,
                        thePassword}, this.AlterTheRootPasswordOperationCompleted, userState);
        }
        
        private void OnAlterTheRootPasswordOperationCompleted(object arg) {
            if ((this.AlterTheRootPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AlterTheRootPasswordCompleted(this, new AlterTheRootPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StaffAssClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StaffAssClient(int theId) {
            object[] results = this.Invoke("StaffAssClient", new object[] {
                        theId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StaffAssClientAsync(int theId) {
            this.StaffAssClientAsync(theId, null);
        }
        
        /// <remarks/>
        public void StaffAssClientAsync(int theId, object userState) {
            if ((this.StaffAssClientOperationCompleted == null)) {
                this.StaffAssClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStaffAssClientOperationCompleted);
            }
            this.InvokeAsync("StaffAssClient", new object[] {
                        theId}, this.StaffAssClientOperationCompleted, userState);
        }
        
        private void OnStaffAssClientOperationCompleted(object arg) {
            if ((this.StaffAssClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StaffAssClientCompleted(this, new StaffAssClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteImagePath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteImagePath(string thePhone) {
            object[] results = this.Invoke("DeleteImagePath", new object[] {
                        thePhone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteImagePathAsync(string thePhone) {
            this.DeleteImagePathAsync(thePhone, null);
        }
        
        /// <remarks/>
        public void DeleteImagePathAsync(string thePhone, object userState) {
            if ((this.DeleteImagePathOperationCompleted == null)) {
                this.DeleteImagePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImagePathOperationCompleted);
            }
            this.InvokeAsync("DeleteImagePath", new object[] {
                        thePhone}, this.DeleteImagePathOperationCompleted, userState);
        }
        
        private void OnDeleteImagePathOperationCompleted(object arg) {
            if ((this.DeleteImagePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImagePathCompleted(this, new DeleteImagePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserLoginCompletedEventHandler(object sender, UserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserCheckCompletedEventHandler(object sender, UserCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertCustomerInfoCompletedEventHandler(object sender, InsertCustomerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCustomerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCustomerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckPhoneCompletedEventHandler(object sender, CheckPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectSthClientInfoCompletedEventHandler(object sender, SelectSthClientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectSthClientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectSthClientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectClientInfoCompletedEventHandler(object sender, SelectClientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectClientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectClientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeletePersonalInfoCompletedEventHandler(object sender, DeletePersonalInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePersonalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePersonalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectPersonalInfoCompletedEventHandler(object sender, SelectPersonalInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectPersonalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectPersonalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdatePriorityStateCompletedEventHandler(object sender, UpdatePriorityStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePriorityStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePriorityStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertTheLogCompletedEventHandler(object sender, InsertTheLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTheLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTheLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTheLogsCompletedEventHandler(object sender, GetTheLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTheLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTheLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateClientInfosCompletedEventHandler(object sender, UpdateClientInfosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ScanReceiveClientCompletedEventHandler(object sender, ScanReceiveClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScanReceiveClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScanReceiveClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckContractCompletedEventHandler(object sender, CheckContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertContractCompletedEventHandler(object sender, InsertContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateContractInfoCompletedEventHandler(object sender, UpdateContractInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContractInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContractInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectContractInfoCompletedEventHandler(object sender, SelectContractInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectContractInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectContractInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteContractInfoCompletedEventHandler(object sender, DeleteContractInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContractInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContractInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertProjectInfoCompletedEventHandler(object sender, InsertProjectInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertProjectInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertProjectInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectProjectListInfoCompletedEventHandler(object sender, SelectProjectListInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectProjectListInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectProjectListInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateProjectListInfoCompletedEventHandler(object sender, UpdateProjectListInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProjectListInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProjectListInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteProjectListInfoCompletedEventHandler(object sender, DeleteProjectListInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProjectListInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProjectListInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckBusinessCompletedEventHandler(object sender, CheckBusinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertBusinessDetailCompletedEventHandler(object sender, InsertBusinessDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBusinessDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBusinessDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectBusinessInfoCompletedEventHandler(object sender, SelectBusinessInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectBusinessInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectBusinessInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteBusinessInfoCompletedEventHandler(object sender, DeleteBusinessInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBusinessInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBusinessInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UploadImgCompletedEventHandler(object sender, UploadImgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadImgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadImgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoadImgCompletedEventHandler(object sender, LoadImgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadImgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadImgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetClueInfoCompletedEventHandler(object sender, GetClueInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClueInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClueInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDateStateCompletedEventHandler(object sender, GetDateStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDateStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDateStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddScheduleCompletedEventHandler(object sender, AddScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetScheduleCompletedEventHandler(object sender, GetScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteScheduleCompletedEventHandler(object sender, DeleteScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPersonalgoalCompletedEventHandler(object sender, GetPersonalgoalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonalgoalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonalgoalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTreeInfoCompletedEventHandler(object sender, GetTreeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStaffInfoCompletedEventHandler(object sender, GetStaffInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddStaffCompletedEventHandler(object sender, AddStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateStaffCompletedEventHandler(object sender, UpdateStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteStaffCompletedEventHandler(object sender, DeleteStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetIdNameCompletedEventHandler(object sender, GetIdNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIdNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIdNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStaffInfosCompletedEventHandler(object sender, GetStaffInfosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TheClientInfoCompletedEventHandler(object sender, TheClientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TheClientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TheClientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TheClientBusinessInfoCompletedEventHandler(object sender, TheClientBusinessInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TheClientBusinessInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TheClientBusinessInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddNewsInfoCompletedEventHandler(object sender, AddNewsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TheNewsInfoCompletedEventHandler(object sender, TheNewsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TheNewsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TheNewsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateNewsInfoCompletedEventHandler(object sender, UpdateNewsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNewsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNewsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteNewsInfoCompletedEventHandler(object sender, DeleteNewsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteNewsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteNewsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllClientsStateInfoCompletedEventHandler(object sender, GetAllClientsStateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllClientsStateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllClientsStateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void JoinQueryCompletedEventHandler(object sender, JoinQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JoinQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JoinQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddIndexCompletedEventHandler(object sender, AddIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpDateIndexCompletedEventHandler(object sender, UpDateIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpDateIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpDateIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AlterTheRootPasswordCompletedEventHandler(object sender, AlterTheRootPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AlterTheRootPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AlterTheRootPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void StaffAssClientCompletedEventHandler(object sender, StaffAssClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StaffAssClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StaffAssClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteImagePathCompletedEventHandler(object sender, DeleteImagePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteImagePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteImagePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591